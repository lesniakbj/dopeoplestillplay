Database:
	- Add game genres XX
	- Add game sub genres XX
	- Create a user_user table = id, username, salt, hashed_pw, last_visit XX
	- Create game_game table = id, game_name, year_released, description
	- Add some seed data to the table XX
	- Come up with a process for backing up the email list each night, or at least throw away useless emails.
	
	- [Added data to game_genre and game_sub_genre]
	- [Added a user to user_user]

On home:
	- Cycle through "flavor text" under the images; create flavor text to cycle through
	- Add more images to cycle through for the bottom images
	- Controller receives data from GameModel with text and images from the model
	- Model loops through 3 received images and text and displays them in place
	
	- Controller:
		- Add a new method (new-home?) to serve the actual home page.
	
	- Begin construction on the look & feel of the actual home page.

Admin:
	- Create login for admin
	- Display entered data
	- Enter new data
	
Images:
	- game-banner instead of game-images
	- game-slot instead of game-image
	- game-img -> game-img
	
Forum:
	- Overclock.net style news section with most recently commented topics
	- forum.dopeoplestillplay.com
	
Login:
	- Handle login sessions
	- Handle user input
		- On input, check if user exists, if not generate a salt and hash salt + password
		- If exists, grab the salt, hash and check against hashed_pw
	- If no user, state can't find user/email/password combination.
Rewrites:
	- Figure out how to force http:// to https:// while not breaking image/resource paths
	
